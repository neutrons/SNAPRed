[project]
name = "SNAPRed"
description = "A desktop application for Lifecycle Managment of data collected from the SNAP instrument."
dynamic = ["version", 'dependencies', 'optional-dependencies']
requires-python = ">=3.8"
readme = "README.md"
license = { text = "GPL3.0" }

[tools.setuptools.dynamic.dependecies]

[project.scripts]
snapred = "snapred.__main__:main"

[build-system]
requires = ["setuptools", "wheel", "toml", "versioningit"]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "src/snapred/_version.py"


[tool.pytest.ini_options]
pythonpath = [
  "src"
]
markers = [
  "integration: mark a test as an integration test",
  "mount_snap: mark a test as using /SNS/SNAP/ data mount",
  "golden_data(*, path=None, short_name=None, date=None): mark golden data to use with a test"
]
addopts = "-m 'not integration'"


[tool.ruff]
line-length = 120
# https://beta.ruff.rs/docs/rules/
select = ["A", "ARG", "BLE", "E", "F", "I", "PT"]
ignore = ["F403", "F405", # wild imports and  unknown names
]
extend-exclude = ["conftest.py"]

[[tool.mypy.overrides]]
module = [
    "yaml",
]
ignore_missing_imports = true
