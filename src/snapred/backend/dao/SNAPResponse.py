from enum import IntEnum
from typing import Any, Optional

from pydantic import BaseModel


class ResponseCode(IntEnum):
    """

    `ResponseCode` defines a set of standardized response codes
    representing various outcomes of a request. ranging from
    successful operations (OK) to various levels of errors,
    including recoverable states and general errors.

    """

    OK = 200
    MAX_OK = 300
    CONTINUE_WARNING = 301
    USER_CANCELLATION = 326
    LIVE_DATA_STATE = 351
    RECOVERABLE = 400
    ERROR = 500


class SNAPResponse(BaseModel):
    """

    `SNAPResponse` encapsulates the structure of a response
    generated by the SNAP application, including a response
    code (using the `ResponseCode` enum for clarity and
    consistency), an optional message providing additional
    context or details about the response, and an optional
    data field that can carry any response data.

    """

    code: ResponseCode
    message: Optional[str] = None
    data: Optional[Any] = None

    # if we need specific getter and setter methods, we can use the @property decorator
    # https://docs.python.org/3/library/functions.html#property
    #
    # @property
    # def key(self) -> str:
    #     return self._key

    # @name.setter
    # def key(self, v: str) -> None:
    #     self._key = v
