name: CI

on: 
  workflow_dispatch:
  pull_request:
  push:
    branches: [main, qa, next]

jobs:

  check-lint:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.check-diff.outputs.test }}
    steps:
    - uses: actions/checkout@v3
    - name: check diff
      id: check-diff
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}
        OUTPUT = $(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep "\.py$")
        echo "test=$OUTPUT" >> $GITHUB_OUTPUT

  lint:
    needs: [check-lint]
    if: needs.check-lint.outputs.output1 != ''
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    
    - uses: actions/checkout@v3
    
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        mamba-version: "*"
        environment-file: environment.yml
        
    - name: Lint with flake8
      run: |
        conda install flake8
        git fetch origin ${{ github.event.pull_request.base.ref }}
        echo $(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep ".py$")
        flake8 $(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep ".py$")
    
    - name: Lint with black
      run: |
        conda install black
        git fetch origin ${{ github.event.pull_request.base.ref }}
        echo $(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep ".py$")
        black $(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep ".py$") --check
    
    - name: Type-check with myy
      run: |
        conda install mypy
        mypy src/

  tests:
    needs: [check-lint]
    if: needs.check-lint.outputs.output1 != ''
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    
    - uses: actions/checkout@v3
    
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        environment-file: environment.yml
    
    - name: Test with pytest
      run: |
        conda install pytest
        pytest
      # xvfb-run -a python -m pytest --cov=srv --cov-report=xml --cov-report=term
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3

  trigger-deploy:
    runs-on: ubuntu-latest
    needs: [lint, tests]
    # only trigger deploys from protected branches and tags
    if: ${{github.ref_protected || github.ref_type == 'tag' }}
    steps:
      - name: Determine Environment
        uses: neutrons/branch-mapper@v2
        id: conda_env_name
        with:
          prefix: snapred
          
      - name: Trigger deploy
        id: trigger
        uses: eic/trigger-gitlab-ci@v2
        with:
          url: https://code.ornl.gov
          token: ${{ secrets.GITLAB_TRIGGER_TOKEN }} 
          ref_name: main
          variables: |
            PLAY="update"
            CONDA_ENV="${{ steps.conda_env_name.outputs.name }}"
