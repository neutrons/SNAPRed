name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main, qa, next]

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: pre-commit-ci/lite-action@v1.0.1
      if: always()

  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:

    - uses: actions/checkout@v3
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        channels: conda-forge,defaults
        mamba-version: "*"
        activate-environment: SNAPRed
    - name: Restore cached conda environment
      id: cache-load
      uses: actions/cache/restore@v3
      with:
        path: /usr/share/miniconda/envs/SNAPRed
        key: ${{ runner.os }}-conda-${{ hashFiles('**/environment.yml') }}
    - name: Load Environment
      if: steps.cache-load.outputs.cache-hit != 'true'
      run: |
        mamba env update --file environment.yml  --prune
    - name: Test with pytest
      run: |
        mamba install pytest
        pytest
      # xvfb-run -a python -m pytest --cov=srv --cov-report=xml --cov-report=term
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3

  trigger-deploy:
    runs-on: ubuntu-latest
    needs: [lint, tests]
    # only trigger deploys from protected branches and tags
    if: ${{github.ref_protected || github.ref_type == 'tag' }}
    steps:
      - name: Determine Environment
        uses: neutrons/branch-mapper@v2
        id: conda_env_name
        with:
          prefix: snapred

      - name: Trigger deploy
        id: trigger
        uses: eic/trigger-gitlab-ci@v2
        with:
          url: https://code.ornl.gov
          token: ${{ secrets.GITLAB_TRIGGER_TOKEN }}
          ref_name: main
          variables: |
            PLAY="update"
            CONDA_ENV="${{ steps.conda_env_name.outputs.name }}"
